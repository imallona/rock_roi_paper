---
title: "01_pdgfra_experiment_e-bring-annotations-together.qmd"
format:
  html:
    toc: true
    embed-resources: true
editor_options: 
  chunk_output_type: console
---

```{r,warning=FALSE, message=FALSE}

rm(list=ls())

library(SingleCellExperiment)
library(ggplot2)
library(dplyr)
library(pheatmap)
library(here)
library(tibble)
library(khroma)
library(googlesheets4)
library(tidyr)
library(reshape2)

#   3907972 Jan 15 09:13 sce_qc-filtered-nodoublets-clustered-epithelial-tuft.rds
# 119139716 Jan 15 08:47 sce_qc-filtered-nodoublets-clustered-epithelial.rds
#  78719462 Jan 15 08:49 sce_qc-filtered-nodoublets-clustered-mesenchymal.rds
# 200338546 Dec 20 17:32 sce_qc-filtered-nodoublets-clustered.rds

save_pheatmap_pdf <- function(x, filename, width=7, height=7) {
   stopifnot(!missing(x))
   stopifnot(!missing(filename))
   pdf(filename, width=width, height=height)
   grid::grid.newpage()
   grid::grid.draw(x$gtable)
   dev.off()
}

datadir <- file.path(here("01_pdgfra_experiment"), "data")

# read filtered-clustered object to SCE
sce_epi <- readRDS(file.path(datadir,
                             "sce_qc-filtered-nodoublets-clustered-epithelial.rds"))
sce_mes <- readRDS(file.path(datadir,
                             "sce_qc-filtered-nodoublets-clustered-mesenchymal.rds"))
sce_tuft <- readRDS(file.path(datadir,
                              "sce_qc-filtered-nodoublets-clustered-epithelial-tuft.rds"))
sce <- readRDS(file.path(datadir,
                         "sce_qc-filtered-nodoublets-clustered.rds"))

anno <- read_sheet("https://docs.google.com/spreadsheets/d/1cvldF_VFA7FYuChoR9a4SIpYcZ1aS80yThNT3iP4T00/edit#gid=1756474524",
                   sheet = "cell-type-annotations")

markers <- read_sheet("https://docs.google.com/spreadsheets/d/1cvldF_VFA7FYuChoR9a4SIpYcZ1aS80yThNT3iP4T00/edit#gid=1756474524",
                   sheet = "markers-pdgfra")


epi_df <- data.frame(key = rownames(colData(sce_epi)),
                     cluster = sce_epi$cluster) %>%
  mutate(cluster = as.integer(cluster)) %>%
  left_join(anno %>% dplyr::filter(Broad_cell_type=="epithelial")) %>%
  dplyr::select(key, annotation)

mes_df <- data.frame(key = rownames(colData(sce_mes)),
                     cluster = sce_mes$cluster) %>%
  mutate(cluster = as.integer(cluster)) %>%
  left_join(anno %>% dplyr::filter(Broad_cell_type=="mesenchymal")) %>%
  dplyr::select(key, annotation)

tuft_df <- data.frame(key = rownames(colData(sce_tuft)),
                     cluster = sce_tuft$cluster) %>%
  mutate(cluster = as.integer(cluster)) %>%
  left_join(anno %>% dplyr::filter(Broad_cell_type=="tuft")) %>%
  dplyr::select(key, annotation)

# verify that tuft cells are a specific cluster in the epithelials
epi_df %>% dplyr::filter((key %in% tuft_df$key)) %>% pull(annotation) %>% table

epi_df <- epi_df %>% dplyr::filter(!(key %in% tuft_df$key))

df <- data.frame(key = rownames(colData(sce))) %>%
  left_join(rbind(epi_df, mes_df, tuft_df)) %>%
  mutate(annotation = replace_na(annotation, "doublets"))

# check
all(df$key == rownames(colData(sce)))
table(df$annotation, useNA = "ifany")

sce$annotation <- df$annotation


# myscale <- rainbow(13)
# names(myscale) <- as.character(1:13)
myscale <- c(color("muted")(9), gray="lightgray", 
             black = "black", darkorange = "darkorange",
             yellowgreen = "yellowgreen")
names(myscale) <- as.character(1:13)

plot(1:13, col=myscale, pch=19, cex=4)

```

### Do a spot check on annotations

```{r}

sce <- sce[,!(sce$annotation %in% c("Contamination_immune_cells",
                                    "Contamination_muscle_cells",
                                    "doublets"))]


inds <- split(seq_len(ncol(sce)), sce$annotation)
set.seed(1976)
inds <- lapply(inds, function(u) {
  sample(u, ifelse(length(u)>=100, 100, length(u)),
         replace = FALSE)
})

names(myscale) <- levels(factor(sce$annotation))
ann_colors = list(annotation = myscale[seq_len(length(inds))])

co <- unlist(inds)
genes <- markers$Marker


# make row annotation
rowanno <- data.frame(Marker = genes) %>% 
  left_join(markers %>% dplyr::select(Marker, Broad_cell_type, Cell_type)) %>%
  transmute(Marker = Marker,
            broad_ct = replace_na(Broad_cell_type, ""),
            celltype = replace_na(Cell_type, "")) %>%
  tibble::column_to_rownames("Marker")

lcounts <- logcounts(sce)

col_anno <- colData(sce)[,c("sample_id","annotation")] %>% 
  as.data.frame


ph <- pheatmap(lcounts[genes,co], show_rownames = TRUE,
        show_colnames = FALSE, scale="none",
        annotation_col = col_anno[co,],
        clustering_distance_rows = "correlation",
        clustering_distance_cols = "correlation",
        annotation_row = rowanno,
        cluster_rows = TRUE,
        treeheight_row = 0,
        cluster_cols = FALSE, fontsize_row = 9,
        annotation_colors = ann_colors)



#save_pheatmap_pdf(ph, "overall_annotation.pdf", width = 18, height = 8)


```

## Do a pseudo-bulk level comparison of the populations

```{r}

with(colData(sce) %>% as.data.frame,
     table(annotation, sample_id))

inds <- split(seq_len(ncol(sce)), 
              paste0(sce$sample_id, "__", sce$annotation))

set.seed(1976)
inds <- lapply(inds, function(u) {
  sample(u, ifelse(length(u)>=11, 11, length(u)),
         replace = FALSE)
})


pbs <- sapply(inds, function(u) rowMeans(lcounts[,u]))

m <- rowMeans(pbs)
v <- rowVars(pbs)

smoothScatter(m, v)

keep <- m > .1 & v > .5

pheatmap(cor(pbs[keep,]))

```

### Look at the sensitivity question

```{r}

exprs_wta <- assay(altExp(sce,"wta_ontarget_multi"))
exprs_tso <- assay(altExp(sce,"tso_ontarget_multi"))

sort(rowSums(exprs_tso, na.rm = TRUE), decreasing = TRUE) -> sorted_tso
sort(rowSums(exprs_wta, na.rm = TRUE), decreasing = TRUE) -> sorted_wta

ids <- gsub("pdgfra_", "", sce$sample_id)
ids <- gsub("_multimodal", "", ids)
sce$sample_id <- gsub("_unimodal", "", ids)

df <- data.frame(tso = as.matrix(t(exprs_tso)),
                 wta = as.matrix(t(exprs_wta)),
                 colData(sce)[,c("sample_id","annotation")])

dfm <- melt(df, id.vars = c("sample_id","annotation"))

sorted <- dfm %>% group_by(variable) %>% 
  summarise(mv = mean(value)) %>% 
  arrange(desc(mv)) %>% 
  pull(variable)

(p <- ggplot(dfm %>% dplyr::filter(variable %in% sorted[1:16]),
            aes(x = annotation, y = value, group = sample_id,
                colour = annotation, shape=sample_id)) +
    geom_point(size = 2, 
               position=position_jitterdodge(jitter.width = .1,
                                             dodge.width = .8)) +
    facet_wrap(~variable, nrow = 4, scales = "free_y") +
    scale_colour_manual(values = myscale) +
  theme(legend.position="bottom",
        axis.text.x = element_text(angle = 25, vjust = 1, hjust=1)) )


feats <- grep("^[wt][ts][ao]", 
              colnames(df), value = TRUE)

feats_s <- split(feats, substr(feats, 5, 100))

i <- 1

pdf("tso_vs_wta.pdf", width = 14, height = 4.5)
for(i in 1:length(feats_s)) {
# for(i in 1:2) {
  p <- ggplot(df, aes(x = .data[[feats_s[[i]][2]]],
                      y = .data[[feats_s[[i]][1]]],
                      colour = annotation,
                      shape = sample_id) ) +
    geom_jitter() +
    scale_colour_manual(values = myscale) +
    facet_grid(sample_id~annotation) +
    xlab("WTA") + ylab("TSO") +
    ggtitle(names(feats_s)[i]) +
    theme(legend.position="bottom")
  print(p)
}
dev.off()


# logcounts(sce)["ENSMUSG00000020122.16__Egfr",]

```

# Save output

```{r}
# save clustered object to RDS

#saveRDS(sce, file.path(datadir, "sce_qc-filtered-nodoublets-clustered-annotated.rds"))

```

### sessionInfo()

```{r}

sessionInfo()

```



