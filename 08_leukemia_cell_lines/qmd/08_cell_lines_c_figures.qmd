---
title: "08_cell_lines_c_figures"
format:
  html:
    toc: true
    embed-resources: true
editor_options: 
  chunk_output_type: console
---

## Load packages, load data

```{r, warning=FALSE, message=FALSE}

rm(list=ls())

library(SingleCellExperiment)
library(scran)
library(ggplot2)
library(dplyr)
library(scater)
library(reshape2)
library(UpSetR)
library(limma)
library(cowplot)
library(pheatmap)
library(readr)
library(plotROC)
library(here)
library(rtracklayer)
library(viridis)
library(scDblFinder)
library(bluster)
library(singleCellTK)
library(khroma)
library(BUSpaRse)
library(dittoSeq)
library(ggvenn)
library(GGally)

wd<-"/Users/gimoro/figure_making_paper/rock_roi_paper/08_cell_line_analysis/data"

rdss <- dir(here("08_cell_line_analysis"), "cell_line.sce", 
            recursive = TRUE, full.names = TRUE)
names(rdss) <- gsub(".sce", "", basename(rdss))
rdss

datadir <- dirname(rdss)[1]

sces <- mapply(function(u,v)  {
  rds <- readRDS(u)
  rds$sample_id <- v
  rds$sample_id.barcode <- paste0(v,".",colnames(rds))
  colnames(rowData(rds)) <- c("name", "type", "value")
  g <- grepl("^ENS", rownames(rds))
  rownames(rds)[g] <- paste0(rownames(rds)[g], 
                             "__", rowData(rds)$name[g])
  rowData(rds)$gene_type <- "capture"
  k <- grepl("^ENSG", rownames(rds))
  rowData(rds)$gene_type[k] <- "human_gene"
  k <- grepl("^ENSMUS", rownames(rds))
  rowData(rds)$gene_type[k] <- "mouse_gene"
  k <- grepl("^mt", rowData(rds)$name)
  rowData(rds)$gene_type[k] <- "mouse_mito"
  k <- grepl("^MT", rowData(rds)$name)
  rowData(rds)$gene_type[k] <- "human_mito"
  rds
}, rdss, names(rdss))

sces <- Reduce(cbind, sces)

sces_nd<-readRDS(file.path(wd, "cell_lines_sce_nd-filtered.rds"))

write.table(colnames(sces_nd),"cell_line.txt")

```

### Setting up knitr 

```{r}

knitr::opts_chunk$set(fig.width = 2.7,
               fig.height = 2.7,
               fig.align = "center",
               include = TRUE,
               dev = c("png","svg"),
               cache=TRUE,
               cache.lazy = FALSE,
               warning = TRUE,
               message = TRUE)

```

### Themes

```{r}

rock_roi_theme<-function(){
  theme(axis.text = element_text(size=5), 
        plot.title=element_text(size=7,face="bold",hjust=0.5),
        axis.title=element_text(size=7,face="bold"),
        strip.text=element_text(size=7,face="bold"),
        legend.title=element_text(size=7,face="bold"),
        legend.text=element_text(size=5),
        aspect.ratio=1,
        legend.key.size = unit(0.5, 'cm'),
        legend.margin=margin(0,0,0,0),
        legend.box.margin=margin(-5,-5,-5,-5),
        legend.title.align=0.5,
        panel.grid.major = element_blank(),
        panel.grid.minor = element_blank())
}

rock_roi_theme_multiple_panels<-function(){
    theme(axis.text = element_text(size=5), 
        plot.title=element_text(size=7,face="bold",hjust=0.5),
        axis.title=element_text(size=7,face="bold"),
        strip.text=element_text(size=7,face="bold"),
        aspect.ratio=1,
        panel.grid.major = element_blank(),
        panel.grid.minor = element_blank(),
        strip.background = element_blank(),
        legend.key.size = unit(0.5, 'cm'),
        legend.title=element_text(size=7,face="bold"),
        legend.text=element_text(size=5),
        legend.margin=margin(0,0,0,0),
        legend.box.margin=margin(-5,-5,-5,-5),
        legend.title.align=0.5,
        panel.border = element_rect(colour = "black", fill = NA))
}

```

## Scale

```{r}

myscale<-c(color("muted")(9), gray="darkgrey", 
             black = "black", darkorange = "darkorange")

# defining colors for samples and for species

names(myscale) <- c("unmod","unmod_roi","rock","egfp_cds","patient","positive","cluster2","cluster3","tdtom_cds","no_detection","doublets","cluster1")

```

### Venn diagram of reads which are in common between starfusion and bwa aln

```{r}
# 
# # intersect with bwa aln
# 
# bwa_aln_ids<-read.delim("~/figure_making_paper/rock_roi_paper/08_cell_line_analysis/data/bwa_aln.txt", header=FALSE)
# 
# starfusion_ids <- read.delim("~/figure_making_paper/rock_roi_paper/08_cell_line_analysis/data/annotated_sub_Chimeric.out.txt", header=FALSE)
# 
# # subsetting for barcodes
# 
# cbs<-colnames(sces_nd)
# 
# 
# bwa_aln_ids$V3<-sapply(strsplit(bwa_aln_ids$V3,"CB:Z:"),"[",2)
# starfusion_ids$V3<-sapply(strsplit(starfusion_ids$V3,"CB:Z:"),"[",2)
# 
# bwa_aln_ids<-bwa_aln_ids[which(bwa_aln_ids$V3 %in% cbs),]
# starfusion_ids<-starfusion_ids[which(starfusion_ids$V3 %in% cbs),]
# 
# length(rownames(bwa_aln_ids))
# length(rownames(starfusion_ids))
# 
# # only keeping major and minor
# 
# bwa_aln_ids<-bwa_aln_ids[which(bwa_aln_ids$V2 %in% c("BCRABLe1a2","BCRABL1e14a2" )),]
# 
# length(rownames(bwa_aln_ids))
# 
# # intersect
# 
# reads_bwa_aln_ids<-bwa_aln_ids$V1
# starfusion_ids_ids<-unique(starfusion_ids$V1)
# 
# length(intersect(reads_bwa_aln_ids,starfusion_ids_ids))
# 
# l<-list(bwa_aln_ids=reads_bwa_aln_ids,starfusion_ids_ids=starfusion_ids_ids)
# 
# setdiff(reads_bwa_aln_ids,starfusion_ids_ids) # the ones detected by bwa aln but not starfusion
# setdiff(starfusion_ids_ids,reads_bwa_aln_ids) # the ones detected by starfusion
# 
# plot12<-ggvenn(l,c("bwa_aln_ids","starfusion_ids_ids"))
# 
# plot12
# 
# ggsave(file=file.path(datadir,"aln_venn.svg"), plot=plot12, width=3.5, height=2.7)
# 
# ```
# 
# ## bwa aln
# 
# ```{r}
# 
# counts_bwa_aln<-read.delim("~/figure_making_paper/rock_roi_paper/08_cell_line_analysis/data_aln/combined_counts_bwa_aln.txt", header=FALSE)
# 
# tail(counts_bwa_aln)
# 
# length(rownames(counts_bwa_aln))
# 
# counts_bwa_aln<-counts_bwa_aln[1:1294,]
# 
# colnames(counts_bwa_aln)<-c("counts","combined","NA")
# 
# # splitting column two into V2 and V2
# 
# split<-data.frame(do.call(rbind,strsplit(counts_bwa_aln$combined,";")))
# counts_bwa_aln$gene<-split$X1
# counts_bwa_aln$barcode<-split$X2
# 
# counts_bwa_aln<-counts_bwa_aln[,c("counts","gene","barcode")]
# counts_bwa_aln$counts<-as.numeric(counts_bwa_aln$counts)
# 
# # convert into a count table
# 
# counts<-data.frame(matrix(nrow=length(unique(counts_bwa_aln$gene)),ncol=length(unique(counts_bwa_aln$barcode))))
# colnames(counts)<-unique(counts_bwa_aln$barcode)
# rownames(counts)<-unique(counts_bwa_aln$gene)
# 
# for (i in rownames(counts)){
#   for (k in colnames(counts)){
#     idx <- intersect(which(counts_bwa_aln$gene == i), which(counts_bwa_aln$barcode == k))
#     if (length(idx) > 0) {
#     counts[i, k] <- counts_bwa_aln$counts[idx]
#     }
#   }
# }
# 
# colnames(counts) <- gsub("^CB:Z:", "", colnames(counts))
# 
# # add as altExp
# 
# # need to first have the same columns
# 
# to_bind<-data.frame(matrix(ncol=length(setdiff(colnames(sces_nd),colnames(counts))),nrow=length(rownames(counts))))
# to_bind[,]<-0
# colnames(to_bind)<-setdiff(colnames(sces_nd),colnames(counts))
# rownames(to_bind)<-rownames(counts)
# 
# counts_total<-cbind(counts,to_bind)
# counts_total<-counts_total[intersect(colnames(counts_total),colnames(sces_nd))]
# sces_nd<-sces_nd[,colnames(counts_total)]
# 
# altExp(sces_nd, "bwa_aln") <- SingleCellExperiment(as.matrix(counts_total))
# rownames(counts_total)
# 
# sces_nd$bwa_aln_BCRABL1e13a2<-colSums(counts_total["BCRABL1e13a2",],na.rm=TRUE)
# sces_nd$bwa_aln_BCRABL1e14a2<-colSums(counts_total["BCRABL1e14a2",],na.rm=TRUE)
# sces_nd$bwa_aln_BCRABLe1a2<-colSums(counts_total["BCRABLe1a2",],na.rm=TRUE)
# sces_nd$bwa_aln_ABL1<-colSums(counts_total[grep("ENSG00000097007.19",rownames(counts_total)),],na.rm=TRUE)
# sces_nd$bwa_aln_BCR<-colSums(counts_total[grep("ENSG00000186716.21",rownames(counts_total)),],na.rm = TRUE)
# 
# table(sces_nd$bwa_aln_BCRABL1e14a2)

```

## Clustering

```{r}

set.seed(1976)
nn.clusters <- clusterCells(sces_nd, use.dimred="PCA",
                            BLUSPARAM=NNGraphParam(k=70))
table(nn.clusters)
sces_nd$cluster <- nn.clusters

scater::plotUMAP(sces_nd, colour_by="cluster")

table(sces_nd$sample_id, sces_nd$cluster)

mm <- model.matrix(~cluster, 
                   data=as.data.frame(colData(sces_nd)))

lcounts <- logcounts(sces_nd)

col_anno <- colData(sces_nd)[,c("cluster")] %>% as.data.frame

scater::plotUMAP(sces_nd, colour_by = "cluster")


# # plot for major fusion
# 
# positive_cells <- sces_nd$bwa_aln_BCRABL1e14a2 > 0
# 
# sces_nd <- sces_nd[, order(positive_cells)]
# 
# plot1<-scater::plotUMAP(sces_nd, colour_by = "bwa_aln_BCRABL1e14a2",point_alpha=1,point_size=0.1)+ 
#   scale_colour_gradient2(low="lightgrey",
#                          mid="lightgrey",
#                          high=myscale["positive"])+
#   rock_roi_theme()
# 
# 
# plot1<-ggrastr::rasterize(plot1, layers='Point', dpi=1000)
# 
# plot1
# 
# ggsave(file=file.path(datadir,"umap_major.svg"), plot=plot1, width=2.7, height=2.7)
# 
# 
# # same for minor fusion
# 
# positive_cells <- sces_nd$bwa_aln_BCRABLe1a2 > 0
# 
# sces_nd <- sces_nd[, order(positive_cells)]
# 
# plot2<-scater::plotUMAP(sces_nd, colour_by = "bwa_aln_BCRABLe1a2",point_alpha=1,point_size=0.1)+ 
#   scale_colour_gradient2(low="lightgrey",
#                          mid="lightgrey",
#                          high=myscale["positive"])+
#   rock_roi_theme()
# 
# plot2<-ggrastr::rasterize(plot2, layers='Point', dpi=1000)
# 
# plot2
# 
# ggsave(file=file.path(datadir,"umap_minor.svg"), plot=plot2, width=2.7, height=2.7)

# which cluster is which

plot3<-scater::plotUMAP(sces_nd, colour_by = "cluster",point_alpha=1,point_size=0.1)+
  scale_color_manual(values = c(myscale[["cluster1"]],myscale[["cluster2"]],myscale[["cluster3"]]))+
  rock_roi_theme()

plot3<-ggrastr::rasterize(plot3, layers='Point', dpi=1000)
plot3

ggsave(file=file.path(datadir,"umap_total.svg"), plot=plot3, width=2.7, height=2.7)

```

### Dot plot with detection of cell line markers

```{r}

markers<-c("ENSG00000177455.15__CD19","ENSG00000012124.17__CD22","ENSG00000107447.8__DNTT","ENSG00000196549.13__MME","ENSG00000198851.10__CD3E","ENSG00000173762.8__CD7","ENSG00000105383.15__CD33","ENSG00000170180.22__GYPA")

short_markers<-as.vector(sapply(strsplit(markers,"__"),"[",2))
short_sces<-sces_nd[markers,]
rownames(short_sces)<-short_markers

plot11<-dittoDotPlot(short_sces,
             short_markers,
             group.by="cluster",
             min.color="grey", 
             max.color=myscale[["positive"]],
             scale=FALSE,
             size=7)+
  rock_roi_theme()

plot11<-ggrastr::rasterize(plot11, layers='Point', dpi=1000)

plot11

ggsave(file=file.path(datadir,"markers.svg"), plot=plot11, width=2.7, height=2.7)

```

### Barplot with detection of BCR and ABL based on dT colored by cluster

```{r}
# 
# rownames(sces_nd)[grep("BCR",rownames(sces_nd))]
# 
# sces_nd$wt_bcr<-assay(sces_nd,1)["ENSG00000186716.21__BCR" ,]
# sces_nd$wt_abl<-assay(sces_nd,1)["ENSG00000097007.19__ABL1" ,]
# 
# cd<-colData(sces_nd)
# 
# df<-data.frame(matrix(nrow=2,ncol=3))
# 
# rownames(df)<-c("wt_bcr","wt_abl")
# colnames(df)<-c("cluster_1","cluster_2","cluster_3")
# 
# for (i in rownames(df)){
#   name<-i
#   df[i,1]<-length(which(cd[which(cd$cluster=="1"),][,name]>0))/length(which(cd$cluster=="1"))*100
#   df[i,2]<-length(which(cd[which(cd$cluster=="2"),][,name]>0))/length(which(cd$cluster=="2"))*100
#   df[i,3]<-length(which(cd[which(cd$cluster=="3"),][,name]>0))/length(which(cd$cluster=="3"))*100
# }
# 
# cluster1<-cd[which(cd$cluster==1),]
# 
# which(cluster1$bwa_aln_BCRABL1e14a2>0)
# which(cluster1$bwa_aln_BCRABLe1a2>0)
# 
# plottable<-melt(df)
# plottable$id<-rep(c("bcr","abl"),3)
# plottable$value
# 
# plot4<-ggplot(plottable,aes(x = factor(id,levels=c("bcr","abl")), 
#                         y = value, 
#                         fill = variable,
#                         colour = variable, group = variable)) +
#   geom_bar(position = position_dodge2(), stat = "identity") +
#   geom_text(aes(label = round(value, 1), 
#                 y = value+1.5), colour = "black",
#             position = position_dodge2(width = 1),
#             size=2,
#             vjust=-0.2) +
#   ylab("Percent cells expressed")+
#   scale_fill_manual(labels=unique(plottable$variable),
#                     values=c(myscale[["cluster1"]],myscale[["cluster2"]],myscale[["cluster3"]]))+
#   scale_color_manual(labels=unique(plottable$variable),
#                     values=c(myscale[["cluster1"]],myscale[["cluster2"]],myscale[["cluster3"]]))+
#   xlab("")+
#   theme_bw()+
#   rock_roi_theme()
# 
# 
# plot4<-ggrastr::rasterize(plot4, layers='Point', dpi=1000)
# plot4
# 
# ggsave(file=file.path(datadir,"wt_bcr_abl.svg"), plot=plot4, width=3.5, height=2.7)

```

### Barplot for TSO 

```{r}
# 
# sces_nd$wt_bcr<-assay(sces_nd,"tso_off_and_ontarget_unique")["ENSG00000186716.21__BCR" ,]
# sces_nd$wt_abl<-assay(sces_nd,"tso_off_and_ontarget_unique")["ENSG00000097007.19__ABL1" ,]
# 
# cd<-colData(sces_nd)
# 
# df<-data.frame(matrix(nrow=2,ncol=3))
# 
# rownames(df)<-c("wt_bcr","wt_abl")
# colnames(df)<-c("cluster_1","cluster_2","cluster_3")
# 
# for (i in rownames(df)){
#   name<-i
#   df[i,1]<-length(which(cd[which(cd$cluster=="1"),][,name]>0))/length(which(cd$cluster=="1"))*100
#   df[i,2]<-length(which(cd[which(cd$cluster=="2"),][,name]>0))/length(which(cd$cluster=="2"))*100
#   df[i,3]<-length(which(cd[which(cd$cluster=="3"),][,name]>0))/length(which(cd$cluster=="3"))*100
# }
# 
# plottable<-melt(df)
# plottable$id<-rep(c("bcr","abl"),3)
# plottable$value
# 
# plot7<-ggplot(plottable,aes(x = factor(id,levels=c("bcr","abl")), 
#                         y = value, 
#                         fill = variable,
#                         colour = variable, group = variable)) +
#   geom_bar(position = position_dodge2(), stat = "identity") +
#   geom_text(aes(label = round(value, 1), 
#                 y = value+1.5), colour = "black",
#             position = position_dodge2(width = 1),
#             size=2,
#             vjust=-0.2) +
#   ylab("Percent cells expressed")+
#   scale_fill_manual(labels=unique(plottable$variable),
#                     values=c(myscale[["cluster1"]],myscale[["cluster2"]],myscale[["cluster3"]]))+
#   scale_color_manual(labels=unique(plottable$variable),
#                     values=c(myscale[["cluster1"]],myscale[["cluster2"]],myscale[["cluster3"]]))+
#   xlab("")+
#   theme_bw()+
#   rock_roi_theme()
# 
# plot7<-ggrastr::rasterize(plot7, layers='Point', dpi=1000)
# plot7
# 
# ggsave(file=file.path(datadir,"tso_wt_bcr_abl.svg"), plot=plot7, width=3.5, height=2.7)

```

### Barplot with detection of minor and major by cluster

```{r}
# 
# cd<-colData(sces_nd)
# 
# df<-data.frame(matrix(nrow=2,ncol=3))
# 
# rownames(df)<-c("bwa_aln_BCRABL1e14a2","bwa_aln_BCRABLe1a2")
# colnames(df)<-c("cluster_1","cluster_2","cluster_3")
# 
# for (i in rownames(df)){
#   name<-i
#   df[i,1]<-length(which(cd[which(cd$cluster=="1"),][,name]>0))/length(which(cd$cluster=="1"))*100
#   df[i,2]<-length(which(cd[which(cd$cluster=="2"),][,name]>0))/length(which(cd$cluster=="2"))*100
#   df[i,3]<-length(which(cd[which(cd$cluster=="3"),][,name]>0))/length(which(cd$cluster=="3"))*100
# }
# 
# plottable<-melt(df)
# plottable$id<-rep(c("major","minor"),3)
# plottable$value
# 
# plot5<-ggplot(plottable,aes(x = factor(id,levels=c("major","minor")), 
#                         y = value, 
#                         fill = variable,
#                         colour = variable, group = variable)) +
#   geom_bar(position = position_dodge2(), stat = "identity") +
#   geom_text(aes(label = round(value, 1), 
#                 y = value+1.5), colour = "black",
#             position = position_dodge2(width = 1),
#             size=2,
#             vjust=-0.2) +
#   ylab("Percent cells expressed")+
#   scale_fill_manual(labels=unique(plottable$variable),
#                     values=c(myscale[["cluster1"]],myscale[["cluster2"]],myscale[["cluster3"]]))+
#   scale_color_manual(labels=unique(plottable$variable),
#                     values=c(myscale[["cluster1"]],myscale[["cluster2"]],myscale[["cluster3"]]))+
#   xlab("")+
#   theme_bw()+
#   rock_roi_theme()
# 
# 
# plot5<-ggrastr::rasterize(plot5, layers='Point', dpi=1000)
# plot5
# 
# ggsave(file=file.path(datadir,"fusion_barplot.svg"), plot=plot5, width=3.5, height=2.7)

```

### Reading in the cbs from pipeline Izaskun

```{r}

seqtk_output<-read.table("~/figure_making_paper/rock_roi_paper/08_cell_line_analysis/data/cell_lines_full_cb_ub_annotated_fusion_locate_out_reg.txt", quote="\"", comment.char="")

colnames(seqtk_output)<-c("seqID","patternName","pattern","strand","start","end","matched","CB","UB")

sub_seqtk_output<-seqtk_output[,c("patternName","CB")]
sub_seqtk_output$CB<-sapply(strsplit(sub_seqtk_output$CB,"CB:Z:"),"[",2)

sub_seqtk_output$BCRABL1e14a2<-0
sub_seqtk_output$BCRABL1e13a2<-0
sub_seqtk_output$BCRABL1e1a2<-0
sub_seqtk_output$wt_BCR<-0
sub_seqtk_output$wt_ABL<-0

table(sub_seqtk_output$patternName)

sub_seqtk_output$BCRABL1e14a2[which(sub_seqtk_output$patternName=="BCRABLe14a2")]<-1
sub_seqtk_output$BCRABL1e13a2[which(sub_seqtk_output$patternName=="BCRABLe13a2")]<-1
sub_seqtk_output$BCRABL1e1a2[which(sub_seqtk_output$patternName=="BCRABLe1a2")]<-1
sub_seqtk_output$wt_BCR[which(sub_seqtk_output$patternName %in% c("ENST00000359540.7_BCRABLe13a2","ENST00000359540.7_BCRABLe14a2","ENST00000359540.7_BCRABLe1a2"))]<-1
sub_seqtk_output$wt_ABL[which(sub_seqtk_output$patternName %in% c("ENST00000318560.6","ENST00000372348.7"))]<-1

cb_harmonized_sub_output_seqtk<-sub_seqtk_output[which(sub_seqtk_output$CB %in% colnames(sces_nd)),]

# have duplicate rows

summed_cb_harmonized_sub_output_seqtk<-aggregate(cb_harmonized_sub_output_seqtk[3:ncol(cb_harmonized_sub_output_seqtk)],cb_harmonized_sub_output_seqtk['CB'], FUN=sum)

setdiff(colnames(sces_nd),summed_cb_harmonized_sub_output_seqtk$CB)

df<-data.frame(matrix(ncol=length(colnames(summed_cb_harmonized_sub_output_seqtk)),nrow=length(setdiff(colnames(sces_nd),summed_cb_harmonized_sub_output_seqtk$CB))))

colnames(df)<-colnames(summed_cb_harmonized_sub_output_seqtk)

df$CB<-setdiff(colnames(sces_nd),cb_harmonized_sub_output_seqtk$CB)
df$BCRABL1e14a2<-0
df$BCRABL1e13a2<-0
df$BCRABL1e1a2<-0
df$wt_BCR<-0
df$wt_ABL<-0

full_summed_cb_harmonized_sub_output_seqtk<-rbind(summed_cb_harmonized_sub_output_seqtk,df)

rownames(full_summed_cb_harmonized_sub_output_seqtk)<-full_summed_cb_harmonized_sub_output_seqtk$CB

full_summed_cb_harmonized_sub_output_seqtk<-full_summed_cb_harmonized_sub_output_seqtk[colnames(sces_nd), , drop = FALSE]

# since just want yes or no and not counts and didn't do UMI deduplication --> convert all numbers to 1 or 0

full_summed_cb_harmonized_sub_output_seqtk[which(full_summed_cb_harmonized_sub_output_seqtk$BCRABL1e14a2>0),"BCRABL1e14a2"]<-1
full_summed_cb_harmonized_sub_output_seqtk[which(full_summed_cb_harmonized_sub_output_seqtk$BCRABL1e13a2>0),"BCRABL1e13a2"]<-1
full_summed_cb_harmonized_sub_output_seqtk[which(full_summed_cb_harmonized_sub_output_seqtk$BCRABL1e1a2>0),"BCRABL1e1a2"]<-1
full_summed_cb_harmonized_sub_output_seqtk[which(full_summed_cb_harmonized_sub_output_seqtk$wt_BCR>0),"wt_BCR"]<-1
full_summed_cb_harmonized_sub_output_seqtk[which(full_summed_cb_harmonized_sub_output_seqtk$wt_ABL>0),"wt_ABL"]<-1

sces_nd$seqtk_BCRABL1e14a2<-full_summed_cb_harmonized_sub_output_seqtk$BCRABL1e14a2
sces_nd$seqtk_BCRABL1e1a2<-full_summed_cb_harmonized_sub_output_seqtk$BCRABL1e1a2
sces_nd$seqtk_BCRABL1e13a2<-full_summed_cb_harmonized_sub_output_seqtk$BCRABL1e13a2
sces_nd$seqtk_wt_BCR<-full_summed_cb_harmonized_sub_output_seqtk$wt_BCR
sces_nd$seqtk_wt_ABL<-full_summed_cb_harmonized_sub_output_seqtk$wt_ABL

```

### Plots for new code

```{r}

positive_cells <- sces_nd$seqtk_BCRABL1e14a2 > 0

sces_nd <- sces_nd[, order(positive_cells)]

plot1<-scater::plotUMAP(sces_nd, colour_by = "seqtk_BCRABL1e14a2",point_alpha=1,point_size=0.1)+ 
  scale_colour_gradient2(low="lightgrey",
                         mid="lightgrey",
                         high=myscale["positive"])+
  rock_roi_theme()


plot1<-ggrastr::rasterize(plot1, layers='Point', dpi=1000)

plot1

ggsave(file=file.path(datadir,"umap_major.svg"), plot=plot1, width=2.7, height=2.7)


# same for minor fusion

positive_cells <- sces_nd$seqtk_BCRABL1e1a2 > 0

sces_nd <- sces_nd[, order(positive_cells)]

plot2<-scater::plotUMAP(sces_nd, colour_by = "seqtk_BCRABL1e1a2",point_alpha=1,point_size=0.1)+ 
  scale_colour_gradient2(low="lightgrey",
                         mid="lightgrey",
                         high=myscale["positive"])+
  rock_roi_theme()

plot2<-ggrastr::rasterize(plot2, layers='Point', dpi=1000)

plot2

ggsave(file=file.path(datadir,"umap_minor.svg"), plot=plot2, width=2.7, height=2.7)



cd<-colData(sces_nd)

df<-data.frame(matrix(nrow=2,ncol=3))

rownames(df)<-c("seqtk_BCRABL1e14a2","seqtk_BCRABL1e1a2")
colnames(df)<-c("cluster_1","cluster_2","cluster_3")

for (i in rownames(df)){
  name<-i
  df[i,1]<-length(which(cd[which(cd$cluster=="1"),][,name]>0))/length(which(cd$cluster=="1"))*100
  df[i,2]<-length(which(cd[which(cd$cluster=="2"),][,name]>0))/length(which(cd$cluster=="2"))*100
  df[i,3]<-length(which(cd[which(cd$cluster=="3"),][,name]>0))/length(which(cd$cluster=="3"))*100
}

plottable<-melt(df)
plottable$id<-rep(c("major","minor"),3)
plottable$value

plot5<-ggplot(plottable,aes(x = factor(id,levels=c("major","minor")), 
                        y = value, 
                        fill = variable,
                        colour = variable, group = variable)) +
  geom_bar(position = position_dodge2(), stat = "identity") +
  geom_text(aes(label = round(value, 1), 
                y = value+1.5), colour = "black",
            position = position_dodge2(width = 1),
            size=2,
            vjust=-0.2) +
  ylab("Percent cells expressed")+
  scale_fill_manual(labels=unique(plottable$variable),
                    values=c(myscale[["cluster1"]],myscale[["cluster2"]],myscale[["cluster3"]]))+
  scale_color_manual(labels=unique(plottable$variable),
                    values=c(myscale[["cluster1"]],myscale[["cluster2"]],myscale[["cluster3"]]))+
  xlab("")+
  theme_bw()+
  rock_roi_theme()


plot5<-ggrastr::rasterize(plot5, layers='Point', dpi=1000)
plot5

ggsave(file=file.path(datadir,"fusion_barplot.svg"), plot=plot5, width=3.5, height=2.7)

```

### Table with cb, annotation, starfusion_counts, fusiongenome_counts, seqtk_umis, and each unfused bcr or abl starsolo counts

```{r}
# 
# which(sces_nd$cluster==1) # Loucy 
# which(sces_nd$cluster==2) # SUP-B15
# which(sces_nd$cluster==3) # K562
# 
# sces_nd$annotation <- NA 
# sces_nd$annotation[sces_nd$cluster == 1] <- "Loucy"
# sces_nd$annotation[sces_nd$cluster == 2] <- "SUP-B15"
# sces_nd$annotation[sces_nd$cluster == 3] <- "K562"
# 
# combined<-data.frame(matrix(nrow=length(colnames(sces_nd)),ncol=15))
# 
# colnames(combined)<-c("cb",
#                 "annotation",
#                 "starfusion_counts",
#                 "fusiongenome_counts_e14a2",
#                 "fusiongenome_counts_e1a2",
#                 "fusiongenome_counts_e13a2",
#                 "fusiongenome_counts_bcr",
#                 "fusiongenome_counts_abl",
#                 "seqtk_counts_e14a2",
#                 "seqtk_counts_e1a2",
#                 "seqtk_counts_e13a2",
#                 "seqtk_counts_bcr",
#                 "seqtk_counts_abl",
#                 "bcr_starsolo_dt",
#                 "abl1_starsolo_dt")
# 
# combined$cb<-colnames(sces_nd)
# combined$annotation<-sces_nd$annotation
# combined$bcr_starsolo_dt<-sces_nd$wt_bcr
# combined$abl1_starsolo_dt<-sces_nd$wt_abl
# combined$fusiongenome_counts_e14a2<-sces_nd$bwa_aln_BCRABL1e14a2
# combined$fusiongenome_counts_e13a2<-sces_nd$bwa_aln_BCRABL1e13a2
# combined$fusiongenome_counts_e1a2<-sces_nd$bwa_aln_BCRABLe1a2
# combined$fusiongenome_counts_bcr<-sces_nd$bwa_aln_BCR
# combined$fusiongenome_counts_abl<-sces_nd$bwa_aln_ABL1
# 
# rownames(combined)<-combined$cb
# 
# # starfusion counts
# 
# starfusion_counts<-read.table("~/figure_making_paper/rock_roi_paper/08_cell_line_analysis/data/counts_star_fusion.txt", quote="\"", comment.char="")
# 
# starfusion_counts<-starfusion_counts[1:length(rownames(starfusion_counts))-1,]
# 
# starfusion_counts$V3<-sapply(strsplit(starfusion_counts$V3,"CB:Z:"),"[",2)
# 
# # seqtk counts 
# 
# sub_output_izaskun<-output_izaskun[,c("patternName","cb","umi")]
# 
# sub_output_izaskun$BCRABL1e14a2<-0
# sub_output_izaskun$BCRABL1e13a2<-0
# sub_output_izaskun$BCRABL1e1a2<-0
# sub_output_izaskun$wt_BCR<-0
# sub_output_izaskun$wt_ABL<-0
# 
# table(sub_output_izaskun$patternName)
# 
# sub_output_izaskun$BCRABL1e14a2[which(sub_output_izaskun$patternName=="BCRABLe14a2")]<-1
# sub_output_izaskun$BCRABL1e13a2[which(sub_output_izaskun$patternName=="BCRABLe13a2")]<-1
# sub_output_izaskun$BCRABL1e1a2[which(sub_output_izaskun$patternName=="BCRABLe1a2")]<-1
# sub_output_izaskun$wt_BCR[which(sub_output_izaskun$patternName %in% c("ENST00000359540.7_BCRABLe13a2","ENST00000359540.7_BCRABLe14a2","ENST00000359540.7_BCRABLe1a2"))]<-1
# sub_output_izaskun$wt_ABL[which(sub_output_izaskun$patternName %in% c("ENST00000318560.6","ENST00000372348.7"))]<-1
# 
# cb_harmonized_sub_output_izaskun<-sub_output_izaskun[which(sub_output_izaskun$cb %in% colnames(sces_nd)),]
# 
# # have duplicate rows
# 
# summed_cb_harmonized_sub_output_izaskun<-aggregate(cb_harmonized_sub_output_izaskun[4:ncol(cb_harmonized_sub_output_izaskun)],cb_harmonized_sub_output_izaskun['cb'], FUN=sum)
# 
# setdiff(colnames(sces_nd),cb_harmonized_sub_output_izaskun$cb)
# 
# df<-data.frame(matrix(ncol=length(colnames(summed_cb_harmonized_sub_output_izaskun)),nrow=length(setdiff(colnames(sces_nd),cb_harmonized_sub_output_izaskun$cb))))
# 
# colnames(df)<-colnames(summed_cb_harmonized_sub_output_izaskun)
# 
# df$cb<-setdiff(colnames(sces_nd),cb_harmonized_sub_output_izaskun$cb)
# df$BCRABL1e14a2<-0
# df$BCRABL1e13a2<-0
# df$BCRABL1e1a2<-0
# df$wt_BCR<-0
# df$wt_ABL<-0
# 
# full_summed_cb_harmonized_sub_output_izaskun<-rbind(summed_cb_harmonized_sub_output_izaskun,df)
# 
# rownames(full_summed_cb_harmonized_sub_output_izaskun)<-full_summed_cb_harmonized_sub_output_izaskun$cb
# 
# full_summed_cb_harmonized_sub_output_izaskun<-full_summed_cb_harmonized_sub_output_izaskun[rownames(combined), , drop = FALSE]
# 
# combined$seqtk_counts_e14a2<-full_summed_cb_harmonized_sub_output_izaskun$BCRABL1e14a2
# 
# combined$seqtk_counts_e14a2<-full_summed_cb_harmonized_sub_output_izaskun$BCRABL1e14a2
# combined$seqtk_counts_e13a2<-full_summed_cb_harmonized_sub_output_izaskun$BCRABL1e13a2
# combined$seqtk_counts_e1a2<-full_summed_cb_harmonized_sub_output_izaskun$BCRABL1e1a2
# combined$seqtk_counts_bcr<-full_summed_cb_harmonized_sub_output_izaskun$wt_BCR
# combined$seqtk_counts_abl<-full_summed_cb_harmonized_sub_output_izaskun$wt_ABL
# 
# combined_no_starfusion<-combined[,-c(3)]
# 
# 
# 
# for (i in colnames(combined_no_starfusion)[3:length(colnames(combined_no_starfusion))]){
#   for (k in colnames(combined_no_starfusion)[3:length(colnames(combined_no_starfusion))]){
#     p<-ggplot(combined_no_starfusion,aes(x=i,y=k,color=annotation))+
#     geom_point()+
#     theme_bw()+
#     rock_roi_theme()
#     print(p)
#   }
# }
# 
# ggplot(combined_no_starfusion,aes(x=i,y=k,color=annotation))+
#     geom_point()+
#     theme_bw()+
#     rock_roi_theme()
    
```

### SessionInfo

```{r}

sessionInfo()

```



