---
title: "03_first_mixing_experiment_i-wta_analysis"
author: "Mark Robinson, Izaskun Mallona & Giulia Moro"
format: 
  html:
    toc: true
    embed-resources: true
    keep_md: true
---


### Load packages

```{r,warning=FALSE, message=FALSE}

rm(list=ls())

library(SingleCellExperiment)
library(scran)
library(ggplot2)
library(dplyr)
library(scater)
library(reshape2)
library(UpSetR)
library(limma)
library(cowplot)
library(pheatmap)
library(googlesheets4)
library(readr)
library(plotROC)
library(here)
library(RColorBrewer)
library(ggnewscale)
library(scales)
library(rmarkdown)
library(khroma)
library(irlba)
library(viridis)
library(gridExtra)
library(quarto)
library(Biostrings)
library(BSgenome)
library(rtracklayer)
library(Matrix)
library(Matrix.utils)
library(edgeR)
library(DESeq2)
library(ggrepel)

packageVersion("Matrix")

```

### Setting up knitr 

```{r}

knitr::opts_chunk$set(fig.width = 2.7,
               fig.height = 2.7,
               fig.align = "center",
               include = TRUE,
               dev = c("png","svg"),
               cache=TRUE,
               cache.lazy = FALSE,
               warning = TRUE,
               message = TRUE)

```

### Themes

```{r}

rock_roi_theme<-function(){
  theme(axis.text = element_text(size=7), 
        plot.title=element_text(size=7,face="bold",hjust=0.5),
        axis.title=element_text(size=7,face="bold"),
        strip.text=element_text(size=7,face="bold"),
        legend.title=element_text(size=7,face="bold"),
        legend.text=element_text(size=7),
        aspect.ratio=1, 
        legend.key.size = unit(0.5, 'cm'),
        legend.margin=margin(0,0,0,0),
        legend.box.margin=margin(-5,-5,-5,-5),
        legend.title.align=0.5,
        panel.grid.major = element_blank(),
        panel.grid.minor = element_blank())
}

rock_roi_theme_multiple_panels<-function(){
    theme(axis.text = element_text(size=7), 
        plot.title=element_text(size=7,face="bold",hjust=0.5),
        axis.title=element_text(size=7,face="bold"),
        strip.text=element_text(size=7,face="bold"),
        aspect.ratio=1,
        panel.grid.major = element_blank(),
        panel.grid.minor = element_blank(),
        strip.background = element_blank(),
        legend.key.size = unit(0.5, 'cm'),
        legend.title=element_text(size=7,face="bold"),
        legend.text=element_text(size=7),
        legend.margin=margin(0,0,0,0),
        legend.box.margin=margin(-5,-5,-5,-5),
        legend.title.align=0.5,
        panel.border = element_rect(colour = "black", fill = NA))
}

```

### Defining colors

```{r}

myscale<-c(color("muted")(9), gray="darkgrey", 
             black = "black", darkorange = "darkorange",
             yellowgreen = "yellowgreen")

# defining colors for samples and for species

names(myscale) <- c("unmod","unmod_roi","rock","egfp_cds","rockroi","human","unknown","mouse","tdtom_cds","no_detection","doublets","unmod_n1","high")

#plot(1:13, col=myscale, pch=19, cex=4)

```

### Load data

```{r}

getwd() # after opening the .Rproj file, getwd() should be "/Users/gimoro/figure_making_paper/rock_roi_paper"

rdss <- dir(here("03_first_mixing_experiment"), "*sce.rds", 
            recursive = TRUE, full.names = TRUE)

names(rdss) <- gsub("_sce.rds", "", basename(rdss))
names(rdss) <- gsub("mixing_", "", names(rdss))

datadir <- dirname(rdss)[1] # folder where the .rds files are 

sce_nd <- readRDS(file.path(datadir, "sce_nd.rds")) # running analysis on filtered object

mouse<-sce_nd[,sce_nd$species=="mouse"]
human<-sce_nd[,sce_nd$species=="human"]

```

### UMAP / PCA first for mouse

```{r}

mouse<-logNormCounts(mouse, assay.type = "wta")

assay(mouse,"counts")<-assay(mouse,"wta")

mouse<-addPerCellQCMetrics(mouse)

mgv <- modelGeneVar(mouse, block = mouse$sample_id)

mgv_pb  <- lapply(mgv$per.block, function(u) {
 o <- order(u$p.value)
 u <- u[o,]
 head(rownames(u), 1000)
})

upset(fromList(mgv_pb))

hvg <- mgv$bio > .01 & mgv$p.value < .01 & mgv$mean > .2
mgv[hvg,] %>% 
  as.data.frame %>% rownames -> hvg
length(hvg)

all(rownames(mouse)==rownames(mgv))

mgv <- cbind(mgv, gene_type = rowData(mouse)$type)

rowData(mouse)[hvg,]$type %>% table

# removing mt genes

hvg <- mgv$bio > .01 & mgv$p.value < .01 & mgv$mean > .2 & mgv$gene_type %in% c("mouse_gene")
rn <- rownames(mgv)[hvg]
length(rn)

# UMAP and PCA

mouse <- fixedPCA(mouse, subset.row=rn, rank = 20) 
mouse <- runUMAP(mouse, dimred="PCA")

plotPCA(mouse, colour_by = "subsets_human_gene_percent")
plotPCA(mouse, colour_by = "subsets_mouse_gene_percent")

plotUMAP(mouse, colour_by = "sample_id")

nn.clusters <- clusterCells(mouse, use.dimred="PCA")
colLabels(mouse) <- nn.clusters
plotReducedDim(mouse, "UMAP", colour_by="label")

summed <- aggregateAcrossCells(mouse, 
    ids=colData(mouse)[,c("sample_id")],use.assay.type="wta")

assay(summed,"wta")

# DEG plots

y <- DGEList(assay(summed), samples=colData(summed))

par(mfrow=c(2,3))

# MD plot

for (i in seq_len(ncol(y))) {
    plotMD(y, column=i)
}

# Logcpms

assay(summed,"counts")<-assay(summed,"wta")
mouse_logcpm<-as.data.frame(cpm(summed,log=TRUE,prior.count=1))

# Pearson corr 

pearson_corr<-cor(mouse_logcpm$unmod,mouse_logcpm$unmod_n1,method="pearson")
pearson_corr

# Kendall corr

kendall_corr<-cor(mouse_logcpm$unmod,mouse_logcpm$unmod_n1,method="kendall")
kendall_corr

# Dots with highest difference logcpms 

delta_mouse_logcpm<-data.frame(value=abs(mouse_logcpm$unmod-mouse_logcpm$unmod_n1))
rownames(delta_mouse_logcpm)<-rownames(mouse_logcpm)
delta_mouse_logcpm$genes<-rownames(delta_mouse_logcpm)
delta_mouse_logcpm<-delta_mouse_logcpm[order(delta_mouse_logcpm$value,decreasing = TRUE),]
top_10<-delta_mouse_logcpm$genes[1:10]

mouse_logcpm$genes<-rownames(mouse_logcpm)
mouse_logcpm<-mouse_logcpm[delta_mouse_logcpm$genes,]
mouse_logcpm$label<-""
mouse_logcpm$label[1:10]<-mouse_logcpm$genes[1:10]

# ggplot

## calculating corr same way as Mark for Pdgfra

plot1<-ggplot(mouse_logcpm,aes(x=unmod,y=unmod_n1,label=label))+
  geom_point(alpha=0.2,size=0.5,stroke=NA)+
  xlab("pseudobulk expression (logcpm) unmod")+
  ylab("pseudobulk expression (logcpm) unmod_n1")+
  theme_bw()+
  rock_roi_theme()+
  ggtitle("Mouse")+
  theme(axis.title.x=element_text(colour=myscale[["unmod"]]))+
  theme(axis.title.y=element_text(colour=myscale[["unmod_n1"]]))+
  geom_text(x=5, y=13, label=format(round(pearson_corr,3)),size=3)



plot1<-rasterize(plot1, layers='Point', dpi=1000)

plot1
  
ggsave(file=file.path(datadir,"mouse.tiff"), plot=plot1, width=2.7, height=2.7,device="tiff")

```

### Corrplot for mouse

```{r}

mouse_logcpm<-mouse_logcpm[,1:4]

colnames(mouse_logcpm)<-gsub("mixing_","",colnames(mouse_logcpm))
mouse_logcpm<-mouse_logcpm[,c("unmod","unmod_n1")]

corrplot.mixed(cor(mouse_logcpm,method="pearson"),
               number.digits = 3,
               number.cex = 0.5,
               tl.cex = 0.5,
               cex.col = 0.5,
               cl.cex = 0.5)

```

### Same for human

```{r}

rm(mouse)
rm(mouse_logcpm)

human<-logNormCounts(human, assay.type = "wta")

assay(human,"counts")<-assay(human,"wta")

mouse<-addPerCellQCMetrics(human)

mgv <- modelGeneVar(human, block = human$sample_id)

mgv_pb  <- lapply(mgv$per.block, function(u) {
 o <- order(u$p.value)
 u <- u[o,]
 head(rownames(u), 1000)
})

upset(fromList(mgv_pb))

hvg <- mgv$bio > .01 & mgv$p.value < .01 & mgv$mean > .2
mgv[hvg,] %>% 
  as.data.frame %>% rownames -> hvg
length(hvg)

all(rownames(human)==rownames(mgv))

mgv <- cbind(mgv, gene_type = rowData(human)$type)

rowData(human)[hvg,]$type %>% table

# removing mt genes

hvg <- mgv$bio > .01 & mgv$p.value < .01 & mgv$mean > .2 & mgv$gene_type %in% c("human_gene")
rn <- rownames(mgv)[hvg]
length(rn)

# UMAP and PCA

human <- fixedPCA(human, subset.row=rn, rank = 20) 
human <- runUMAP(human, dimred="PCA")

plotPCA(human, colour_by = "subsets_human_gene_percent")
plotPCA(human, colour_by = "subsets_mouse_gene_percent")

plotUMAP(human, colour_by = "sample_id")

nn.clusters <- clusterCells(human, use.dimred="PCA")
colLabels(human) <- nn.clusters
plotReducedDim(human, "UMAP", colour_by="label")

summed <- aggregateAcrossCells(human, 
    ids=colData(human)[,c("sample_id")],use.assay.type="wta")

assay(summed,"wta")

# DEG plots

y <- DGEList(assay(summed), samples=colData(summed))

par(mfrow=c(2,3))

# MD plot

for (i in seq_len(ncol(y))) {
    plotMD(y, column=i)
}

# Logcpms

assay(summed,"counts")<-assay(summed,"wta")
human_logcpm<-as.data.frame(cpm(summed,log=TRUE,prior.count=1))

# Pearson corr 

pearson_corr<-cor(human_logcpm$unmod,human_logcpm$unmod_n1,method="pearson")
pearson_corr

# Kendall corr

kendall_corr<-cor(human_logcpm$unmod,human_logcpm$unmod_n1,method="kendall")
kendall_corr

# Dots with highest difference logcpms 

delta_human_logcpm<-data.frame(value=abs(human_logcpm$unmod-human_logcpm$unmod_n1))
rownames(delta_human_logcpm)<-rownames(human_logcpm)
delta_human_logcpm$genes<-rownames(delta_human_logcpm)
delta_human_logcpm<-delta_human_logcpm[order(delta_human_logcpm$value,decreasing = TRUE),]
top_10<-delta_human_logcpm$genes[1:10]

human_logcpm$genes<-rownames(human_logcpm)
human_logcpm<-human_logcpm[delta_human_logcpm$genes,]
human_logcpm$label<-""
human_logcpm$label[1:10]<-human_logcpm$genes[1:10]

# ggplot

plot2<-ggplot(human_logcpm,aes(x=unmod,y=unmod_n1,label=label))+
  geom_point(alpha=0.2,size=0.5,stroke=NA)+
  xlab("pseudobulk expression (logcpm) unmod")+
  ylab("pseudobulk expression (logcpm) unmod_n1")+
  theme_bw()+
  rock_roi_theme()+
  ggtitle("Human")+
  theme(axis.title.x=element_text(colour=myscale[["unmod"]]))+
  theme(axis.title.y=element_text(colour=myscale[["unmod_n1"]]))+
  geom_text(x=5, y=13, label=format(round(pearson_corr,3)),size=3)


plot2<-rasterize(plot2, layers='Point', dpi=1000)

plot2

ggsave(file=file.path(datadir,"human.tiff"), plot=plot2, width=2.7, height=2.7,device="tiff")

```

### Corrplot

```{r}

human_logcpm<-human_logcpm[,1:4]

colnames(human_logcpm)<-gsub("mixing_","",colnames(human_logcpm))
human_logcpm<-human_logcpm[,c("unmod","unmod_n1")]

corrplot.mixed(cor(human_logcpm,method="pearson"),
               number.digits = 3,
               number.cex = 0.5,
               tl.cex = 0.5,
               cex.col = 0.5,
               cl.cex = 0.5)

```

### Session info

```{r}

sessionInfo()

```







