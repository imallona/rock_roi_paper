---
title: "07_leukemia_c_figures"
format:
  html:
    toc: true
    embed-resources: true
editor_options: 
  chunk_output_type: console
---

## Load packages, load data

```{r, warning=FALSE, message=FALSE}

rm(list=ls())

library(SingleCellExperiment)
library(scran)
library(ggplot2)
library(dplyr)
library(scater)
library(reshape2)
library(UpSetR)
library(limma)
library(cowplot)
library(pheatmap)
library(readr)
library(plotROC)
library(here)
library(rtracklayer)
library(viridis)
library(scDblFinder)
library(bluster)
library(singleCellTK)
library(BUSpaRse)
library(khroma)
library(dittoSeq)
library(ggrastr)
library(edgeR)
library(tibble)
library(ggplotify)
library(grid)
library(gridExtra)


# need to restart every time

#install.packages("~/Downloads/Matrix_1.6-1.tar.gz", repos = NULL, type = "source")

wd<-"/Users/gimoro/figure_making_paper/rock_roi_paper/07_analysis_patient_data/data"

rdss <- dir(here("07_analysis_patient_data"), "leukemia_patient.sce", 
            recursive = TRUE, full.names = TRUE)
names(rdss) <- gsub(".sce", "", basename(rdss))
rdss

datadir <- dirname(rdss)[1]

sces <- mapply(function(u,v)  {
  rds <- readRDS(u)
  rds$sample_id <- v
  rds$sample_id.barcode <- paste0(v,".",colnames(rds))
  colnames(rowData(rds)) <- c("name", "type", "value")
  g <- grepl("^ENS", rownames(rds))
  rownames(rds)[g] <- paste0(rownames(rds)[g], 
                             "__", rowData(rds)$name[g])
  rowData(rds)$gene_type <- "capture"
  k <- grepl("^ENSG", rownames(rds))
  rowData(rds)$gene_type[k] <- "human_gene"
  k <- grepl("^ENSMUS", rownames(rds))
  rowData(rds)$gene_type[k] <- "mouse_gene"
  k <- grepl("^mt", rowData(rds)$name)
  rowData(rds)$gene_type[k] <- "mouse_mito"
  k <- grepl("^MT", rowData(rds)$name)
  rowData(rds)$gene_type[k] <- "human_mito"
  rds
}, rdss, names(rdss))

sces <- Reduce(cbind, sces)
sces
fusion_db_sces_nd<-readRDS("/Users/gimoro/figure_making_paper/rock_roi_paper/08_cell_line_analysis/data/lines_and_patients.rds")$patient

dim(fusion_db_sces_nd) # dim: 21487 5434

```

### Setting up knitr 

```{r}

knitr::opts_chunk$set(fig.width = 5.4,
               fig.height = 10,
               fig.align = "center",
               include = TRUE,
               dev = c("png","svg"),
               cache=TRUE,
               cache.lazy = FALSE,
               warning = TRUE,
               message = TRUE)

```

### Themes

```{r}

rock_roi_theme<-function(){
  theme(axis.text = element_text(size=5), 
        plot.title=element_text(size=7,face="bold",hjust=0.5),
        axis.title=element_text(size=7,face="bold"),
        strip.text=element_text(size=7,face="bold"),
        legend.title=element_text(size=7,face="bold"),
        legend.text=element_text(size=5),
        aspect.ratio=1,
        legend.key.size = unit(0.5, 'cm'),
        legend.margin=margin(0,0,0,0),
        legend.box.margin=margin(-5,-5,-5,-5),
        legend.title.align=0.5,
        panel.grid.major = element_blank(),
        panel.grid.minor = element_blank())
}

rock_roi_theme_multiple_panels<-function(){
    theme(axis.text = element_text(size=5), 
        plot.title=element_text(size=7,face="bold",hjust=0.5),
        axis.title=element_text(size=7,face="bold"),
        strip.text=element_text(size=7,face="bold"),
        aspect.ratio=1,
        panel.grid.major = element_blank(),
        panel.grid.minor = element_blank(),
        strip.background = element_blank(),
        legend.key.size = unit(0.5, 'cm'),
        legend.title=element_text(size=7,face="bold"),
        legend.text=element_text(size=5),
        legend.margin=margin(0,0,0,0),
        legend.box.margin=margin(-5,-5,-5,-5),
        legend.title.align=0.5,
        panel.border = element_rect(colour = "black", fill = NA))
}

```

## Scale

```{r}
myscale<-c(color("muted")(9), gray="darkgrey", 
             black = "black", darkorange = "darkorange")

# defining colors for samples and for species

names(myscale) <- c("unmod","unmod_roi","rock","egfp_cds","patient","positive","cluster2","cluster3","tdtom_cds","no_detection","doublets","cluster1")

```

### Loading clustered object

```{r}

clustered_sces_nd<-readRDS(file.path(wd,"clustered_object.rds"))

dim(clustered_sces_nd)

names(myscale)<-unique(fusion_db_sces_nd$ident)

plot1<-scater::plotUMAP(fusion_db_sces_nd, colour_by = "ident",point_alpha=1,point_size=0.1)+
  rock_roi_theme()+
  scale_color_manual(values = myscale)

plot1<-ggrastr::rasterize(plot1, layers='Point', dpi=1000)

plot1

ggsave(file=file.path(datadir,"umap.svg"), plot=plot1, width=2.7, height=2.7)

```

## Extracting metadata for GEO

```{r}

cd<-colData(fusion_db_sces_nd)
cd$barcode<-rownames(cd)

to_export<-cd[,c("barcode","ident")]

write.csv(to_export,"leukemia_patient_sample_annotation.csv")

```

### Barplot markers

```{r}

names(myscale) <- c("unmod","unmod_roi","rock","egfp_cds","patient","positive","cluster2","cluster3","tdtom_cds","no_detection","doublets","cluster1")

grep("17--",rownames(fusion_db_sces_nd))

markers<-c("ENSG00000177455.15--CD19",
                     "ENSG00000012124.17--CD22",
                     "ENSG00000010278.15--CD9",
                     "ENSG00000107447.8--DNTT",
                     "ENSG00000196549.13--MME",
                     "ENSG00000134460.18--IL2RA",
                     "ENSG00000174059.17--CD34",
                     "ENSG00000198851.10--CD3E",
                     "ENSG00000173762.8--CD7",
                     "ENSG00000153563.16--CD8A",
                     "ENSG00000172116.23--CD8B",
                     "ENSG00000145649.8--GZMA",
                     "ENSG00000244734.4--HBB",
                     "ENSG00000170458.14--CD14",
                     "ENSG00000005381.8--MPO",
                     "ENSG00000105383.15--CD33",
                     "ENSG00000197561.7--ELANE",
                     "ENSG00000197405.8--C5AR1",
                     "ENSG00000158869.11--FCER1G",
                     "ENSG00000090382.7--LYZ",
                     "ENSG00000166927.13--MS4A7",
                     "ENSG00000101439.9--CST3",
                     "ENSG00000114013.16--CD86",
                     "ENSG00000158481.13--CD1C",
                     "ENSG00000179639.10--FCER1A",
                     "ENSG00000239961.3--LILRA4")

short_markers<-as.vector(sapply(strsplit(markers,"--"),"[",2))
short_sces<-fusion_db_sces_nd[markers,]
rownames(short_sces)<-short_markers

plot11<-dittoDotPlot(short_sces,
             short_markers,
             group.by="ident",
             min.color="grey", 
             max.color=myscale[["positive"]],
             scale=FALSE,
             size=7)+
  rock_roi_theme()

plot11<-ggrastr::rasterize(plot11, layers='Point', dpi=1000)

plot11

ggsave(file=file.path(datadir,"markers.svg"), plot=plot11, width=10, height=2.7)

```

### New plots

```{r}

fusion_db_sces_nd$gene_fusion_num_14906_id_6904__BCR_ABL1<-as.numeric(assay(altExp(fusion_db_sces_nd))["gene_fusion_num_14906_id_6904__BCR_ABL1",])
fusion_db_sces_nd$gene_fusion_num_14865_id_6899__BCR_ABL1<-as.numeric(assay(altExp(fusion_db_sces_nd))["gene_fusion_num_14865_id_6899__BCR_ABL1",])

positive_cells <- fusion_db_sces_nd$gene_fusion_num_14865_id_6899__BCR_ABL1> 0
fusion_db_sces_nd$positive_cells_gene_fusion_num_14865_id_6899__BCR_ABL1 <- positive_cells

fusion_db_sces_nd <- fusion_db_sces_nd[, order(positive_cells)]

plot1<-scater::plotUMAP(fusion_db_sces_nd, colour_by = "positive_cells_gene_fusion_num_14865_id_6899__BCR_ABL1",point_alpha=1,point_size=0.1)+ 
  scale_colour_manual(values = c("FALSE" = "lightgrey", "TRUE" = myscale[["positive"]]))+
  rock_roi_theme()

plot1<-ggrastr::rasterize(plot1, layers='Point', dpi=1000)

plot1

ggsave(file=file.path(datadir,"umap_major.svg"), plot=plot1, width=2.7, height=2.7)

# same for minor fusion

positive_cells <- fusion_db_sces_nd$gene_fusion_num_14906_id_6904__BCR_ABL1 > 0
fusion_db_sces_nd$positive_cells_gene_fusion_num_14906_id_6904__BCR_ABL1 <- positive_cells
fusion_db_sces_nd <- fusion_db_sces_nd[, order(positive_cells)]

plot2<-scater::plotUMAP(fusion_db_sces_nd, colour_by = "positive_cells_gene_fusion_num_14906_id_6904__BCR_ABL1",point_alpha=1,point_size=0.1)+ 
  scale_colour_manual(values = c("FALSE" = "lightgrey", "TRUE" = myscale[["positive"]]))+
  rock_roi_theme()

plot2<-ggrastr::rasterize(plot2, layers='Point', dpi=1000)

plot2

ggsave(file=file.path(datadir,"umap_minor.svg"), plot=plot2, width=2.7, height=2.7)


# barplot

cd<-colData(fusion_db_sces_nd)

df<-data.frame(matrix(nrow=2,ncol=7))

rownames(df)<-c("gene_fusion_num_14865_id_6899__BCR_ABL1","gene_fusion_num_14906_id_6904__BCR_ABL1")
colnames(df)<-unique(cd$ident)

for (i in rownames(df)){
  name<-i
  df[i,1]<-length(which(cd[which(cd$ident==unique(cd$ident)[1]),][,name]>0))/length(which(cd$ident==unique(cd$ident)[1]))*100
  df[i,2]<-length(which(cd[which(cd$ident==unique(cd$ident)[2]),][,name]>0))/length(which(cd$ident==unique(cd$ident)[2]))*100
  df[i,3]<-length(which(cd[which(cd$ident==unique(cd$ident)[3]),][,name]>0))/length(which(cd$ident==unique(cd$ident)[3]))*100
  df[i,4]<-length(which(cd[which(cd$ident==unique(cd$ident)[4]),][,name]>0))/length(which(cd$ident==unique(cd$ident)[4]))*100
  df[i,5]<-length(which(cd[which(cd$ident==unique(cd$ident)[5]),][,name]>0))/length(which(cd$ident==unique(cd$ident)[5]))*100
  df[i,6]<-length(which(cd[which(cd$ident==unique(cd$ident)[6]),][,name]>0))/length(which(cd$ident==unique(cd$ident)[6]))*100
  df[i,7]<-length(which(cd[which(cd$ident==unique(cd$ident)[7]),][,name]>0))/length(which(cd$ident==unique(cd$ident)[7]))*100
}

plottable<-melt(df)
plottable$id<-rep(c("major","minor"),7)
plottable$value

names(myscale)<-unique(fusion_db_sces_nd$ident)

plot5<-ggplot(plottable,aes(x = factor(id,levels=c("major","minor")), 
                        y = value, 
                        fill = variable,
                        colour = variable, group = variable)) +
  geom_bar(position = position_dodge2(), stat = "identity") +
  geom_text(aes(label = round(value, 1), 
                y = value+1.5), colour = "black",
            position = position_dodge2(width = 1),
            size=2,
            vjust=-0.2) +
  ylab("Percent cells expressed")+
  theme_bw()+
  rock_roi_theme()+
  scale_fill_manual(values = myscale)+
  scale_color_manual(values = myscale)
  
plot5<-ggrastr::rasterize(plot5, layers='Point', dpi=1000)
plot5

ggsave(file=file.path(datadir,"fusion_barplot.svg"), plot=plot5, width=3.5, height=2.7)

```

### Analysis of monocytes (comparison of transcriptomes for answering reviewer comments - WTA correlation)

```{r}

monocytes_sce_nd<-fusion_db_sces_nd[,fusion_db_sces_nd$ident=="monocytes"]
monocytes_sce_nd$positive<-"no"
monocytes_sce_nd$positive[which(monocytes_sce_nd$gene_fusion_num_14865_id_6899__BCR_ABL1>0)]<-"yes"

table(monocytes_sce_nd$positive)

summed <- aggregateAcrossCells(monocytes_sce_nd, 
    ids=monocytes_sce_nd$positive)

summed<-summed[-which(rowSums(assay(summed,"counts"))==0),] # removing genes with zero counts 

monocytes_logcpm<-as.data.frame(edgeR::cpm(summed,log=TRUE,prior.count=1))

pearson_corr<-cor(monocytes_logcpm$no,monocytes_logcpm$yes,method="pearson")
pearson_corr

plot1<-ggplot(monocytes_logcpm,aes(x=yes,y=no))+
  geom_point(alpha=0.2,size=1,stroke=NA)+
  xlab("pseudobulk expression (logcpm) yes")+
  ylab("pseudobulk expression (logcpm) no")+
  theme_bw()+
  rock_roi_theme()+
  geom_text(x=5, y=13, label=paste0("r=",format(round(pearson_corr,3))),size=3)

plot1

plot1<-rasterize(plot1, layers='Point', dpi=1000)



ggsave(file=file.path(datadir,"comparison_monocytes.png"), plot=plot1, width=2.7, height=2.7,device="tiff")


```

## Heatmap with monocyte markers

```{r}

levels(fusion_db_sces_nd$ident)<-c(levels(fusion_db_sces_nd$ident),"BCR_ABL1_positive_monocytes")
levels(fusion_db_sces_nd$ident)<-c(levels(fusion_db_sces_nd$ident),"BCR_ABL1_negative_monocytes")

fusion_db_sces_nd$ident[which(fusion_db_sces_nd$gene_fusion_num_14865_id_6899__BCR_ABL1>0&fusion_db_sces_nd$ident=="monocytes")]<-"BCR_ABL1_positive_monocytes"
fusion_db_sces_nd$ident[which(fusion_db_sces_nd$gene_fusion_num_14865_id_6899__BCR_ABL1==0&fusion_db_sces_nd$ident=="monocytes")]<-"BCR_ABL1_negative_monocytes"

fusion_db_sces_nd$positivity<-0
fusion_db_sces_nd$positivity[which(fusion_db_sces_nd$gene_fusion_num_14865_id_6899__BCR_ABL1>0)]<-1

inds<-split(seq_len(ncol(fusion_db_sces_nd)),fusion_db_sces_nd$ident)
set.seed(1976)
inds<-lapply(inds, function(u) {
  sample(u,ifelse(length(u)>=100,100,length(u)),replace=FALSE)
})

co<-unlist(inds)
co <- rev(co)

names(myscale)<-c("patient leukemic cells","dendritic cells","NA","myeloid precursors","SUP-B15 cell line","precursor erythocytes","T cells","BCR_ABL1_positive_monocytes","BCR_ABL1_negative_monocytes")
ann_colors<-list(annotation = myscale[seq_len(length(inds))])

col_anno<-colData(fusion_db_sces_nd)[, "ident", drop = FALSE] %>% as.data.frame()
col_anno<-col_anno[co, , drop = FALSE]
rownames(col_anno)<-colnames(fusion_db_sces_nd)[co]

lcounts<-as.matrix(logcounts(fusion_db_sces_nd))
gene_list<-intersect(markers, rownames(lcounts))

col_anno <- colData(fusion_db_sces_nd)[, "ident", drop = FALSE] %>% as.data.frame()
col_anno$positivity <- fusion_db_sces_nd$positivity
col_anno <- col_anno[co, , drop = FALSE]
rownames(col_anno) <- colnames(fusion_db_sces_nd)[co]

ann_colors <- list(
  ident = myscale[seq_len(length(inds))],
  positivity = c("0" = "white", "1" = "black")
)

lcounts_sub <- lcounts[gene_list, co]

keep <- apply(lcounts_sub, 1, sd) > 0
lcounts_sub <- lcounts_sub[keep, , drop = FALSE]

# heatmap
pheatmap(lcounts_sub,
         show_rownames = TRUE,
         show_colnames = FALSE,
         scale = "none",
         annotation_col = col_anno,
         clustering_distance_rows = "correlation",
         cluster_rows = TRUE,
         treeheight_row = 50,
         cluster_cols = FALSE,
         fontsize_row = 9,
         annotation_colors = ann_colors)

```

# Adding HVGs

```{r}

mgv<-modelGeneVar(fusion_db_sces_nd)
top_hvg<-rownames(mgv[order(mgv$bio,decreasing=TRUE),])[1:1000]

gene_list<-unique(c(top_hvg,markers))

lcounts<-as.matrix(logcounts(fusion_db_sces_nd))
mat<-lcounts[intersect(gene_list,rownames(lcounts)),,drop=FALSE]

inds<-split(seq_len(ncol(fusion_db_sces_nd)),fusion_db_sces_nd$ident)
set.seed(1976)
inds<-lapply(inds,function(u)sample(u,min(length(u),100),replace=FALSE))
co<-unlist(inds)
mat<-mat[,co,drop=FALSE]

#dropzero-variancerowsandcols
row_vars<-apply(mat,1,var)
col_vars<-apply(mat,2,var)
mat<-mat[row_vars>0,col_vars>0,drop=FALSE]

#buildannotationwithidentandpositivity
col_anno<-data.frame(
ident=factor(fusion_db_sces_nd$ident[co[col_vars>0]]),
positivity=fusion_db_sces_nd$positivity[co[col_vars>0]]
)
rownames(col_anno)<-colnames(mat)

#annotationcolors
ann_colors<-list(
ident=myscale[levels(col_anno$ident)],
positivity=c("0"="white","1"="black")
)

labels_row<-ifelse(rownames(mat)%in%markers,rownames(mat),"")

pheatmap(mat,
show_rownames=TRUE,
labels_row=labels_row,
show_colnames=FALSE,
scale="none",
annotation_col=col_anno,
clustering_distance_rows="correlation",
clustering_distance_cols="correlation",
cluster_rows=TRUE,
cluster_cols=FALSE,
treeheight_row=50,
fontsize_row=6,
annotation_colors=ann_colors)


```

