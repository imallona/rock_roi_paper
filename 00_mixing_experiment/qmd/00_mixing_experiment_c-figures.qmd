---
title: "00_mixing_experiment_c-figures"
author: "Giulia Moro"
format: 
  html:
    toc: true
    embed-resources: true
    keep_md: true
---

### TO DO 

```{r}

# Figure out Fuzznuc ROI error
# Substitute the WTA with the wta_ontarget_multi
# Remake figures with new count tables (UMI dedup)

```


### Load packages, load data 

```{r,warning=FALSE, message=FALSE}

rm(list=ls())

library(SingleCellExperiment)
library(scran)
library(ggplot2)
library(dplyr)
library(scater)
library(reshape2)
library(UpSetR)
library(limma)
library(cowplot)
library(pheatmap)
library(readr)
library(plotROC)
library(here)
library(RColorBrewer)
library(ggnewscale)
library(scales)

#packageVersion("RColorBrewer")

getwd() # after opening the .Rproj file, getwd() should be "/Users/gimoro/figure_making_paper/rock_roi_paper"

rdss <- dir(here("00_mixing_experiment"), "^mixing.*rds", 
            recursive = TRUE, full.names = TRUE)

names(rdss) <- gsub("_sce.rds", "", basename(rdss))
rdss # prints the .rds files in the 00_mixing_experiment folder

datadir <- dirname(rdss)[1] # folder where the .rds files are 

sces <- mapply(function(u,v)  {
  rds <- readRDS(u)
  rds$sample_id <- v
  rds$sample_id.barcode <- paste0(v,".",colnames(rds))
  colnames(rowData(rds)) <- c("name", "type", "value")
  g <- grepl("^ENS", rownames(rds))
  rownames(rds)[g] <- paste0(rownames(rds)[g], 
                             "__", rowData(rds)$name[g])
  rowData(rds)$gene_type <- "capture"
  k <- grepl("^ENSG", rownames(rds))
  rowData(rds)$gene_type[k] <- "human_gene"
  k <- grepl("^ENSMUS", rownames(rds))
  rowData(rds)$gene_type[k] <- "mouse_gene"
  k <- grepl("^mt", rowData(rds)$name)
  rowData(rds)$gene_type[k] <- "mouse_mito"
  k <- grepl("^MT", rowData(rds)$name)
  rowData(rds)$gene_type[k] <- "human_mito"
  rds
}, rdss, names(rdss))

sce <- Reduce(cbind, sces)

```

### First figure: mito vs total UMI 

```{r}

rowData(sce)$gene_type %>% table

rd <- rowData(sce)
sce <- addPerCellQCMetrics(sce, assay.type = "wta",
                           subsets=list(capture=rd$gene_type=="capture",
                                        human_gene=rd$gene_type=="human_gene",
                                        human_mito=rd$gene_type=="human_mito",
                                        mouse_gene=rd$gene_type=="mouse_gene",
                                        mouse_mito=rd$gene_type=="mouse_mito"))

cd <- colData(sce) %>% as.data.frame %>% 
  mutate(total_mito_percent = subsets_mouse_mito_percent+subsets_human_mito_percent)

ggplot(cd, aes(x = total, y = total_mito_percent)) +
  geom_point() + scale_x_log10() + scale_y_sqrt() +
  facet_wrap(~factor(sample_id,levels=c("mixing_unmod","mixing_unmod_roi","mixing_rock","mixing_rockroi"))) + 
  geom_hline(yintercept=c(3,25), colour="orange") +
  geom_vline(xintercept=c(2750), colour="orange") +
  geom_density2d()+
  theme_bw()+
  xlab("total number of transcripts")+
  ylab("percent mitochondrial reads")+
  theme(axis.text = element_text(size = 15), axis.title=element_text(size=20,face="bold"),strip.text=element_text(size=15,face="bold"))

```

### Reading filtered dataset (object from Mark) 

```{r}

sce_filt<-readRDS(file.path(datadir, "sce_qc-filtered.rds")) 

```

### Defining regions in filt dataset

```{r}

colData(altExp(sce_filt,withColData=TRUE))$"egfp_cds"<-colSums(assay(altExp(sce_filt),1)[c("5_to_roi_egfp","roi_egfp","rock_egfp","capture_sequence_double_egfp_egfp"),])
colData(altExp(sce_filt,withColData=TRUE))$"egfp_tx"<-colSums(assay(altExp(sce_filt),1)[c("5_utr_egfp_wpre","3_utr_egfp_wpre","5_to_roi_egfp","roi_egfp","rock_egfp","capture_sequence_double_egfp_egfp"),])
colData(altExp(sce_filt,withColData=TRUE))$"tdtom_cds"<-colSums(assay(altExp(sce_filt),1)[c("5_to_roi_tdtomato","roi_1_tdtomato","roi_2_tdtomato","roi_3_tdtomato","roi_4_tdtomato","between_roi_1","between_roi_2","between_roi_3","rock_tdtomato","capture_sequence_double_egfp_tdtom"),]) #counting all regions twice due to fraction count
colData(altExp(sce_filt,withColData=TRUE))$"tdtom_tx"<-colSums(assay(altExp(sce_filt),1)[c("5_utr_tdtomato_wpre","3_utr_tdtomato_wpre","5_to_roi_tdtomato","roi_1_tdtomato","roi_2_tdtomato","roi_3_tdtomato","roi_4_tdtomato","between_roi_1","between_roi_2","between_roi_3","rock_tdtomato","capture_sequence_double_egfp_tdtom"),]) #counting all regions twice due to fraction count
colData(altExp(sce_filt,withColData=TRUE))$"egfp_roi"<-assay(altExp(sce_filt),1)["roi_egfp",]
colData(altExp(sce_filt,withColData=TRUE))$"tdtom_roi1"<-colSums(assay(altExp(sce_filt),1)[c("roi_1_tdtomato","roi_3_tdtomato"),])
colData(altExp(sce_filt,withColData=TRUE))$"tdtom_roi2"<-colSums(assay(altExp(sce_filt),1)[c("roi_2_tdtomato","roi_4_tdtomato"),])
colData(altExp(sce_filt,withColData=TRUE))$"sum_tdtom_rois"<-colSums(assay(altExp(sce_filt),1)[c("roi_1_tdtomato","roi_3_tdtomato","roi_2_tdtomato","roi_4_tdtomato"),])
colData(altExp(sce_filt,withColData=TRUE))$"sum_rois"<-colSums(assay(altExp(sce_filt),1)[c("roi_1_tdtomato","roi_3_tdtomato","roi_2_tdtomato","roi_4_tdtomato","roi_egfp"),])

```

### Score regions tso_multi filt dataset --> in this case the tx doesn't make sense, just using the cds and the Rois

```{r}

colData(altExp(sce_filt,withColData=TRUE))$"egfp_detection_score"<-0
colData(altExp(sce_filt,withColData=TRUE))$egfp_detection_score[which(colData(altExp(sce_filt,withColData=TRUE))$'egfp_cds'>0)] <- 1
colData(altExp(sce_filt,withColData=TRUE))$egfp_detection_score[which(colData(altExp(sce_filt,withColData=TRUE))$'egfp_roi'>0)] <- 2
colData(altExp(sce_filt,withColData=TRUE))$egfp_detection_score[which(colData(altExp(sce_filt,withColData=TRUE))$'egfp_roi'>0)] <- 3

colData(altExp(sce_filt,withColData=TRUE))$"tdtom_detection_score"<-0
colData(altExp(sce_filt,withColData=TRUE))$tdtom_detection_score[which(colData(altExp(sce_filt,withColData=TRUE))$'tdtom_cds'>0)] <- 1
colData(altExp(sce_filt,withColData=TRUE))$tdtom_detection_score[which(colData(altExp(sce_filt,withColData=TRUE))$'tdtom_roi1'>0)] <- 2
colData(altExp(sce_filt,withColData=TRUE))$tdtom_detection_score[which(colData(altExp(sce_filt,withColData=TRUE))$'tdtom_roi2'>0)] <- 2
colData(altExp(sce_filt,withColData=TRUE))$tdtom_detection_score[which(colData(altExp(sce_filt,withColData=TRUE))$'tdtom_roi2'>0 & colData(altExp(sce_filt,withColData=TRUE))$'tdtom_roi1'>0)] <- 3

table(colData(altExp(sce_filt,withColData=TRUE))$egfp_detection_score,colData(altExp(sce_filt,withColData=TRUE))$sample_id)
table(colData(altExp(sce_filt,withColData=TRUE))$tdtom_detection_score,colData(altExp(sce_filt,withColData=TRUE))$sample_id)

```

### Splitting mouse vs human filt dataset

```{r}

sce_filt$species<-"NA"
sce_filt$species[which(sce_filt$subsets_mouse_gene_percent>50)]<-"mouse"
sce_filt$species[which(sce_filt$subsets_human_gene_percent>50)]<-"human"

table(sce_filt$species)
table(colData(altExp(sce_filt,withColData=TRUE))$egfp_detection_score,colData(altExp(sce_filt,withColData=TRUE))$species)
table(colData(altExp(sce_filt,withColData=TRUE))$tdtom_detection_score,colData(altExp(sce_filt,withColData=TRUE))$species)

cd <- colData(sce_filt) %>% as.data.frame %>% 
  mutate(total_mito_percent = subsets_mouse_mito_percent+subsets_human_mito_percent)

```

### Barnyard plot

```{r}

cds<-colData(sce_filt) %>% as.data.frame
alt<-colData(altExp(sce_filt,withColData=TRUE)) %>% as.data.frame
combined<-merge(cds,alt)

brewer.pal(n=4,name="BuGn")
brewer.pal(n=4,name="Blues")

combined$color<-"purple" # these will be the doublets
combined$color[which(combined$egfp_detection_score==0 & combined$tdtom_detection_score==0)]<-"grey" # no detection of either
combined$color[which(combined$egfp_detection_score==1 & combined$tdtom_detection_score==0)]<-"#B2E2E2"
combined$color[which(combined$egfp_detection_score==2 & combined$tdtom_detection_score==0)]<-"#66C2A4"
combined$color[which(combined$egfp_detection_score==3 & combined$tdtom_detection_score==0)]<-"#238B45"
combined$color[which(combined$egfp_detection_score==0 & combined$tdtom_detection_score==1)]<-"#BDD7E7"
combined$color[which(combined$egfp_detection_score==0 & combined$tdtom_detection_score==2)]<-"#6BAED6"
combined$color[which(combined$egfp_detection_score==0 & combined$tdtom_detection_score==3)]<-"#2171B5"

ggplot(combined, aes(
  x = subsets_mouse_gene_sum,
  y = subsets_human_gene_sum,
  color = color 
)) +
  geom_point(alpha = 0.5) +
  scale_x_log10() + scale_y_log10() +
  facet_wrap(~factor(sample_id, levels = c("mixing_unmod", "mixing_unmod_roi", "mixing_rock", "mixing_rockroi"))) +
  theme_bw() +
  xlab("mouse gene sum") +
  ylab("human gene sum") +
  theme(
    axis.text = element_text(size = 15),
    axis.title = element_text(size = 20, face = "bold"),
    strip.text = element_text(size = 15, face = "bold")
  ) +
  scale_color_identity(
    name = "Legend Title",
    guide = "legend" ,
  )+
  labs(title="detection of egfp and tdtomato regions")+
  scale_color_manual(labels=c("all_tdtom_rois","all_egfp_rois","tdtom_roi","egfp_cds","tdtom_cds","no_detection","doublets"), values=c("#2171B5","#238B45","#6BAED6","#B2E2E2","#BDD7E7","grey","purple"))
                
```

### baryard plot with ROI detection 

```{r}

combined$roi_color<-"purple" # these will be the doublets
combined$roi_color[which(combined$egfp_detection_score==0 & combined$tdtom_detection_score==0)]<-"grey" # no detection of either
combined$roi_color[which(combined$egfp_detection_score==1 & combined$tdtom_detection_score==0)]<-"grey" # cds in this case also zero
combined$roi_color[which(combined$egfp_detection_score==2 & combined$tdtom_detection_score==0)]<-"#238B45"
combined$roi_color[which(combined$egfp_detection_score==3 & combined$tdtom_detection_score==0)]<-"#238B45"
combined$roi_color[which(combined$egfp_detection_score==0 & combined$tdtom_detection_score==1)]<-"grey" # cds in this case also zero
combined$roi_color[which(combined$egfp_detection_score==0 & combined$tdtom_detection_score==2)]<-"#2171B5" # don't care if it is one ROI or all ROIs
combined$roi_color[which(combined$egfp_detection_score==0 & combined$tdtom_detection_score==3)]<-"#2171B5"

ggplot(combined, aes(
  x = subsets_mouse_gene_sum,
  y = subsets_human_gene_sum,
  color = roi_color 
)) +
  geom_point(alpha = 0.5) +
  scale_x_log10() + scale_y_log10() +
  facet_wrap(~factor(sample_id, levels = c("mixing_unmod", "mixing_unmod_roi", "mixing_rock", "mixing_rockroi"))) +
  theme_bw() +
  xlab("mouse gene sum") +
  ylab("human gene sum") +
  theme(
    axis.text = element_text(size = 15),
    axis.title = element_text(size = 20, face = "bold"),
    strip.text = element_text(size = 15, face = "bold")
  ) +
  scale_color_identity(
    name = "Legend Title",
    guide = "legend" ,
  )+
  labs(title="detection of egfp and tdtomato ROI")+
  scale_color_manual(labels=c("tdtom_roi_detected","egfp_roi_detected","no_detection","doublets"), values=c("#2171B5","#238B45","grey","purple"))

```

### baryard plot with cds detection

```{r}

combined$cds_color<-"purple" # these will be the doublets
combined$cds_color[which(combined$egfp_detection_score==0 & combined$tdtom_detection_score==0)]<-"grey" # no detection of either
combined$cds_color[which(combined$egfp_detection_score==1 & combined$tdtom_detection_score==0)]<-"#238B45"
combined$cds_color[which(combined$egfp_detection_score==2 & combined$tdtom_detection_score==0)]<-"#238B45" # rois are part of the cds
combined$cds_color[which(combined$egfp_detection_score==3 & combined$tdtom_detection_score==0)]<-"#238B45" # rois are part of the cds
combined$cds_color[which(combined$egfp_detection_score==0 & combined$tdtom_detection_score==1)]<-"#2171B5"
combined$cds_color[which(combined$egfp_detection_score==0 & combined$tdtom_detection_score==2)]<-"#2171B5" # rois are part of the cds
combined$cds_color[which(combined$egfp_detection_score==0 & combined$tdtom_detection_score==3)]<-"#2171B5" # rois are part of the cds

ggplot(combined, aes(
  x = subsets_mouse_gene_sum,
  y = subsets_human_gene_sum,
  color = cds_color 
)) +
  geom_point(alpha = 0.5) +
  scale_x_log10() + scale_y_log10() +
  facet_wrap(~factor(sample_id, levels = c("mixing_unmod", "mixing_unmod_roi", "mixing_rock", "mixing_rockroi"))) +
  theme_bw() +
  xlab("mouse gene sum") +
  ylab("human gene sum") +
  theme(
    axis.text = element_text(size = 15),
    axis.title = element_text(size = 20, face = "bold"),
    strip.text = element_text(size = 15, face = "bold")
  ) +
  scale_color_identity(
    name = "Legend Title",
    guide = "legend" ,
  )+
  labs(title="detection of egfp and tdtom cds")+
  scale_color_manual(labels=c("tdtom_cds_detected","egfp_cds_detected","no_detection","doublets"), values=c("#2171B5","#238B45","grey","purple"))

```

### TSO vs WTA plot --> color by tso_ontarget_multi

```{r}

rds <- rowData(sce_filt)
tso_qc <- perCellQCMetrics(sce_filt, assay.type = "tso_off_and_ontarget_unique",
                           subsets=list(capture=rds$gene_type=="capture",
                                        human_gene=rds$gene_type=="human_gene",
                                        human_mito=rds$gene_type=="human_mito",
                                        mouse_gene=rds$gene_type=="mouse_gene",
                                        mouse_mito=rds$gene_type=="mouse_mito"))

df <- data.frame(tso_total = tso_qc$total,
                 tso_capture_sum = tso_qc$subsets_capture_sum,
                 tso_mito_percent = tso_qc$subsets_mouse_mito_percent+
                   tso_qc$subsets_human_mito_percent,
                 wta_total = sce_filt$total,
                 wta_capture_sum = sce_filt$subsets_capture_sum,
                 wta_mito_percent = sce_filt$subsets_mouse_mito_percent+
                   sce_filt$subsets_human_mito_percent,
                 sample_id = sce_filt$sample_id)

log_1p_tso_ontarget_multi <- log1p(df$tso_capture_sum)

brewer.pal(n=9,name="BuGn")

ggplot(df, aes(x = tso_total, y = wta_total, color = log_1p_tso_ontarget_multi)) +
  geom_point(alpha=0.5) +
  scale_x_log10() + scale_y_log10() +
  theme_bw() +
  xlab("total TSO UMIs") +
  ylab("total WTA UMIs") +
  theme(
    axis.text = element_text(size = 15),
    axis.title = element_text(size = 20, face = "bold"),
    strip.text = element_text(size = 15, face = "bold"))+
  facet_wrap(~factor(sample_id, levels = c("mixing_unmod", "mixing_unmod_roi", "mixing_rock", "mixing_rockroi")))+
  labs(title="total WTA UMIs vs total TSO UMIs")+
  scale_color_gradient(low="#99D8C9",high="#00441B")

```

### UMIs TSO vs WTA capture, colored by tso_ontarget_multi ordered categorical

```{r}

# adding the score to sces

alt<-colData(altExp(sce_filt,withColData=TRUE)) %>% as.data.frame
df$egfp_detection_score<-alt$egfp_detection_score
df$tdtom_detection_score<-alt$tdtom_detection_score

df$color<-"purple" # these will be the doublets
df$color[which(df$egfp_detection_score==0 & df$tdtom_detection_score==0)]<-"grey" # no detection of either
df$color[which(df$egfp_detection_score==1 & df$tdtom_detection_score==0)]<-"#B2E2E2"
df$color[which(df$egfp_detection_score==2 & df$tdtom_detection_score==0)]<-"#66C2A4"
df$color[which(df$egfp_detection_score==3 & df$tdtom_detection_score==0)]<-"#238B45"
df$color[which(df$egfp_detection_score==0 & df$tdtom_detection_score==1)]<-"#BDD7E7"
df$color[which(df$egfp_detection_score==0 & df$tdtom_detection_score==2)]<-"#6BAED6"
df$color[which(df$egfp_detection_score==0 & df$tdtom_detection_score==3)]<-"#2171B5"


ggplot(df, aes(x = tso_capture_sum, y = wta_capture_sum, color=color))+
  geom_jitter(height = .2)+
  facet_wrap(~factor(sample_id, levels = c("mixing_unmod", "mixing_unmod_roi", "mixing_rock", "mixing_rockroi"))) +
  theme_bw()+
  xlab("on target TSO UMIs")+
  ylab("on target WTA UMIs")+
  theme(axis.text = element_text(size = 15),axis.title = element_text(size = 20, face = "bold"),strip.text = element_text(size = 15, face = "bold"))+
  scale_color_identity(
    name = "Legend Title",
    guide = "legend" ,
  )+
  labs(title="detection of egfp and tdtomato regions")+
  scale_color_manual(labels=c("all_tdtom_rois","all_egfp_rois","tdtom_roi","egfp_cds","tdtom_cds","no_detection","doublets"), values=c("#2171B5","#238B45","#6BAED6","#B2E2E2","#BDD7E7","grey","purple"))
  

```

### UMIs TSO vs WTA capture, colored by raw total reads

```{r}

ggplot(df, aes(x = tso_capture_sum, y = wta_capture_sum,color=log_1p_tso_ontarget_multi))+
  geom_jitter(height = .2)+
  facet_wrap(~factor(sample_id, levels = c("mixing_unmod", "mixing_unmod_roi", "mixing_rock", "mixing_rockroi"))) +
  theme_bw()+
  xlab("on target TSO UMIs")+
  ylab("on target WTA UMIs")+
  theme(axis.text = element_text(size = 15),axis.title = element_text(size = 20, face = "bold"),strip.text = element_text(size = 15, face = "bold"))+
  labs(title="on target WTA and TSO UMIs")+
  scale_color_gradient(low="#99D8C9",high="#00441B")

```



### False positive vs true positive

```{r}

sces_nd <- readRDS(file.path(datadir, "sce_qc-filtered-nodoublets.rds"))
exprs_nd <- assay(altExp(sces_nd),1)

sort(rowSums(exprs_nd, na.rm = TRUE), decreasing = TRUE) -> sorted

df <- data.frame(mouse = (sces_nd$origin == "mouse")+0,
                 human = (sces_nd$origin == "human")+0,
                 sample = sces_nd$sample_id,
                 as.matrix(t(exprs_nd[names(sorted),])))
dfm <- melt(df, id.vars = c("human","mouse","sample"))


human_targets <- grep("tdtomato", names(sorted), value = TRUE)

p <- ggplot(dfm %>% filter(variable %in% c("roi_1_tdtomato", "roi_2_tdtomato","rock_tdtomato")),
                      aes(m = value, d = human, colour=sample, group=sample)) + 
  geom_roc(size = 1.2, alpha = .8,
           position = position_dodge2(width=.001)) +
  facet_grid(~variable) +
  xlim(0, .018) +
  ggtitle("Human targets") +
  theme(legend.position="bottom") +
  theme_bw()+
  xlab("false positive fraction")+
  ylab("true positive fraction")+
  theme(axis.text = element_text(size = 15),axis.title = element_text(size = 20, face = "bold"),strip.text = element_text(size = 15, face = "bold"))
  

mouse_targets <- grep("egfp", names(sorted), value = TRUE)

q <- ggplot(dfm %>% filter(variable %in% c("rock_egfp","roi_egfp")),
                      aes(m = value, d = mouse, colour=sample, group=sample)) + 
  geom_roc(size = 1.2, alpha = .8,
           position = position_dodge2(width=.001)) +
  facet_grid(~variable) +
  xlim(0, .018) +
  ggtitle("Mouse targets") +
  theme(legend.position="none") +
  theme_bw()+
  xlab("false positive fraction")+
  ylab("true positive fraction")+
  theme(axis.text = element_text(size = 15),axis.title = element_text(size = 20, face = "bold"),strip.text = element_text(size = 15, face = "bold"))
  
cowplot::plot_grid(p,q, nrow=2)

```


### Fuzznuc ROI

```{r}

# still to do, getting error in Matrix package when generating UMAP 

```

### Barplot with % positive cells (for now just tso_ontarget_multi, so now just for cds)

```{r}

alt<-altExp(sce_filt,withColData=TRUE)

mouse<-alt[,alt$species=="mouse"]
human<-alt[,alt$species=="human"]

positive_cells<-data.frame(matrix(nrow = 4, ncol = 2)) 
colnames(positive_cells)<-c("percent_egfp_pos_mouse","percent_tdtom_pos_human")
rownames(positive_cells)<-unique(alt$sample_id)

for (i in unique(mouse$sample_id)){
  positive_cells[i,1]<-length(which(mouse[,mouse$sample_id==i]$egfp_cds>0))/length(mouse[,mouse$sample_id==i]$egfp_cds)*100
}

for (i in unique(human$sample_id)){
  positive_cells[i,2]<-length(which(human[,human$sample_id==i]$tdtom_cds>0))/length(human[,human$sample_id==i]$tdtom_cds)*100
}

plottable<-melt(positive_cells)
plottable$sample<-rep(rownames(positive_cells),2)

ggplot(data=plottable,aes(y=value,x=variable,fill=factor(sample,levels=c("mixing_unmod","mixing_unmod_roi","mixing_rock","mixing_rockroi")))) +
  geom_bar(stat="identity",width = 0.8, position = position_dodge(width = 0.9))+
  xlab(" ")+
  ylab("percent positive cells")+
  theme_bw()+
  theme(axis.text = element_text(size = 15),axis.title = element_text(size = 20, face = "bold"),strip.text = element_text(size = 15, face = "bold"))+
  scale_fill_discrete(name = "Samples")


```



### Print sessionInfo()

```{r}

sessionInfo()

```


