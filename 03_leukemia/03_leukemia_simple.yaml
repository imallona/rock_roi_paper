## simulate: True generates fake data and runs the pipeline
simulate: False

## where outputs will be generated at
working_dir: /home/imallona/ebrunner_spectral/leukemia

## software stack, will work out of the box if within the supplied docker container
Rbin: R
STAR: STAR
featureCounts: featureCounts
bedtools: bedtools
bedGraphToBigWig: bedGraphToBigWig
faSize: faSize

## run limits
nthreads: 40
per_task_max_nthreads: 10
max_mem_mb: 350000 ## these are megabytes

## path to whitelists directory
whitelist_path: '/home/imallona/src/rock_roi_method/data/'

## path to the counting module
rock_method_path: '/home/imallona/src/rock_roi_method/'

## fill below these line if `simulate : False` --------------------------------------------------------
## ----------------------------------------------------------------------------------------------------
## if `simulate: True` then all config below this line will be replaced by
##   hardcoded values (within the Snakefile)

gtf: /home/imallona/ebrunner_spectral/leukemia/genomes/leukemia.gtf
genome: /home/imallona/ebrunner_spectral/leukemia/genomes/leukemia.fa

## cDNA read length -1
sjdbOverhang: 61

## run mode, one of these (please see the README / docs):
##   'tso off- and ontarget unique'
##   'tso ontarget multi'
##   'all'
run_mode: 'all'

## GTF `source` field (colymn2) identifying on-target rock- or roi- features
capture_gtf_column_2_pattern : 'captured'
featurecounts_t: 'exon' ## feature counting unit for featurecounts
featurecounts_g: 'gene_id' ## feature grouping unit for featurecounts

samples:
  - name: leukemia_patients
    uses:
      cb_umi_fq: /home/imallona/ebrunner_spectral/data/fastqs_short_leukemia/r1_patient_samples.fastq.gz
      cdna_fq: /home/imallona/ebrunner_spectral/data/fastqs_short_leukemia/r2_patient_samples.fastq.gz
      whitelist: 96x3
      expected_cells: 10000